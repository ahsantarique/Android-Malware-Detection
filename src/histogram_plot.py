import matplotlib.pyplot as plt
import numpy as np

# An "interface" to matplotlib.axes.Axes.hist() method

good_data = np.loadtxt('../data/good.dat', dtype='float64')
bad_data = np.loadtxt('../data/bad.dat', dtype='float64')


mean_good = np.mean(good_data, axis=0)
mean_bad = np.mean(bad_data, axis=0)

print(mean_good.shape)

std_good = np.std(good_data, axis=0)
std_bad = np.std(bad_data, axis=0)

print('done')
for i in range(1,2):
	plt.subplot(i*100)
	x = good_data[:,i]
	n, bins, patches = plt.hist(x=x, bins='auto', color='#0504aa',
		                    alpha=0.7, rwidth=0.85)
	plt.grid(axis='y', alpha=0.75)
	plt.xlabel('Value')
	plt.ylabel('Frequeency')
	plt.title('My Very Own Histogram')
	plt.text(23, 45, r'$\mu=15, b=3$')
	maxfreq = n.max()
	# Set a clean upper y-axis limit.
	plt.ylim(ymax=np.ceil(maxfreq / 10) * 10 if maxfreq % 10 else maxfreq + 10)
	plt.show()


for i in range(bad_data.shape[1]):
	x = bad_data[:,i]
	n, bins, patches = plt.hist(x=x, bins='auto', color='#0504aa',
		                    alpha=0.7, rwidth=0.85)
	plt.grid(axis='y', alpha=0.75)
	plt.xlabel('Value')
	plt.ylabel('Frequeency')
	plt.title('My Very Own Histogram')
	plt.text(23, 45, r'$\mu=15, b=3$')
	maxfreq = n.max()
	# Set a clean upper y-axis limit.
	plt.ylim(ymax=np.ceil(maxfreq / 10) * 10 if maxfreq % 10 else maxfreq + 10)
	plt.show()
